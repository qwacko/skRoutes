// Auto-generated by skroutes-plugin
// WARNING: Do not import from this file in route files to avoid circular dependencies
import type { StandardSchemaV1 } from '@standard-schema/spec';


// Import schema definitions from page files
import { _routeConfig as routeConfig0 } from '../../../src/routes/[id]/+page';
import { _paramsSchema as routeConfig1_params, _searchParamsSchema as routeConfig1_searchParams } from '../../../src/routes/api/users/[id]/+server';
import { _routeConfig as routeConfig2 } from '../../../src/routes/products/[id]/+page.server';
import { _paramsSchema as routeConfig3_params, _searchParamsSchema as routeConfig3_searchParams } from '../../../src/routes/server/[id]/+page.server';
import { _routeConfig as routeConfig4 } from '../../../src/routes/type-test/[id]/+page.server';
import { _routeConfig as routeConfig5 } from '../../../src/routes/users/[id]/+page.server';

export const routeConfig = {
  '/[id]': {
          paramsValidation: routeConfig0.paramsValidation,
          searchParamsValidation: routeConfig0.searchParamsValidation,
        },
  '/api/users/[id]': {
          paramsValidation: routeConfig1_params,
          searchParamsValidation: routeConfig1_searchParams,
        },
  '/products/[id]': {
          paramsValidation: routeConfig2.paramsValidation,
          searchParamsValidation: routeConfig2.searchParamsValidation,
        },
  '/server/[id]': {
          paramsValidation: routeConfig3_params,
          searchParamsValidation: routeConfig3_searchParams,
        },
  '/type-test/[id]': {
          paramsValidation: routeConfig4.paramsValidation,
          searchParamsValidation: routeConfig4.searchParamsValidation,
        },
  '/users/[id]': {
          paramsValidation: routeConfig5.paramsValidation,
          searchParamsValidation: routeConfig5.searchParamsValidation,
        }
} as const;

// Export validators for direct access
export const routeValidators = {
  '/[id]': {
    paramsValidator: routeConfig0.paramsValidation,
    searchParamsValidator: routeConfig0.searchParamsValidation,
  },
  '/api/users/[id]': {
    paramsValidator: routeConfig1_params,
    searchParamsValidator: routeConfig1_searchParams,
  },
  '/products/[id]': {
    paramsValidator: routeConfig2.paramsValidation,
    searchParamsValidator: routeConfig2.searchParamsValidation,
  },
  '/server/[id]': {
    paramsValidator: routeConfig3_params,
    searchParamsValidator: routeConfig3_searchParams,
  },
  '/type-test/[id]': {
    paramsValidator: routeConfig4.paramsValidation,
    searchParamsValidator: routeConfig4.searchParamsValidation,
  },
  '/users/[id]': {
    paramsValidator: routeConfig5.paramsValidation,
    searchParamsValidator: routeConfig5.searchParamsValidation,
  }
} as const;

// Export route keys for type checking
export type RouteKeys = '/[id]' | '/api/users/[id]' | '/products/[id]' | '/server/[id]' | '/type-test/[id]' | '/users/[id]';

// Export type mapping for schema inference
export type RouteTypeMap = {
  '/[id]': { params: StandardSchemaV1.InferOutput<typeof routeConfig0.paramsValidation>; searchParams: StandardSchemaV1.InferOutput<typeof routeConfig0.searchParamsValidation> };
  '/api/users/[id]': { params: StandardSchemaV1.InferOutput<typeof routeConfig1_params>; searchParams: StandardSchemaV1.InferOutput<typeof routeConfig1_searchParams> };
  '/products/[id]': { params: StandardSchemaV1.InferOutput<typeof routeConfig2.paramsValidation>; searchParams: StandardSchemaV1.InferOutput<typeof routeConfig2.searchParamsValidation> };
  '/server/[id]': { params: StandardSchemaV1.InferOutput<typeof routeConfig3_params>; searchParams: StandardSchemaV1.InferOutput<typeof routeConfig3_searchParams> };
  '/type-test/[id]': { params: StandardSchemaV1.InferOutput<typeof routeConfig4.paramsValidation>; searchParams: StandardSchemaV1.InferOutput<typeof routeConfig4.searchParamsValidation> };
  '/users/[id]': { params: StandardSchemaV1.InferOutput<typeof routeConfig5.paramsValidation>; searchParams: StandardSchemaV1.InferOutput<typeof routeConfig5.searchParamsValidation> }
};

// Export validator type mapping
export type RouteValidatorMap = {
  '/[id]': { paramsValidator: typeof routeConfig0.paramsValidation; searchParamsValidator: typeof routeConfig0.searchParamsValidation };
  '/api/users/[id]': { paramsValidator: typeof routeConfig1_params; searchParamsValidator: typeof routeConfig1_searchParams };
  '/products/[id]': { paramsValidator: typeof routeConfig2.paramsValidation; searchParamsValidator: typeof routeConfig2.searchParamsValidation };
  '/server/[id]': { paramsValidator: typeof routeConfig3_params; searchParamsValidator: typeof routeConfig3_searchParams };
  '/type-test/[id]': { paramsValidator: typeof routeConfig4.paramsValidation; searchParamsValidator: typeof routeConfig4.searchParamsValidation };
  '/users/[id]': { paramsValidator: typeof routeConfig5.paramsValidation; searchParamsValidator: typeof routeConfig5.searchParamsValidation }
};

// Convenience type aliases for accessing route param/search param types
export type RouteParams<T extends RouteKeys> = RouteTypeMap[T]['params'];
export type RouteSearchParams<T extends RouteKeys> = RouteTypeMap[T]['searchParams'];

// Re-export types for convenience
export type { RouteConfig } from '../skRoutes.js';

// Export plugin options for reference
export const pluginOptions = {
  "errorURL": "/error"
};
